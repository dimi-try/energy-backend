"""add all tables

Revision ID: 76cda71c3775
Revises: 3deb0a5a2e14
Create Date: 2025-03-03 21:34:47.551277

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '76cda71c3775'
down_revision: Union[str, None] = '3deb0a5a2e14'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_brands_id', table_name='brands')
    op.drop_table('brands')
    op.drop_index('ix_energetics_id', table_name='energetics')
    op.drop_table('energetics')
    op.drop_index('ix_brand_id', table_name='brand')
    op.drop_index('ix_brand_name', table_name='brand')
    op.drop_table('brand')
    op.drop_index('ix_ratings_id', table_name='ratings')
    op.drop_table('ratings')
    op.drop_index('ix_categories_id', table_name='categories')
    op.drop_table('categories')
    op.drop_index('ix_roles_id', table_name='roles')
    op.drop_table('roles')
    op.drop_index('ix_energy_id', table_name='energy')
    op.drop_index('ix_energy_name', table_name='energy')
    op.drop_table('energy')
    op.drop_table('user_roles')
    op.drop_index('ix_criteria_id', table_name='criteria')
    op.drop_table('criteria')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_premium', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('username', name='users_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_table('criteria',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('criteria_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='criteria_pkey'),
    sa.UniqueConstraint('name', name='criteria_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_criteria_id', 'criteria', ['id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='user_roles_role_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_roles_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name='user_roles_pkey')
    )
    op.create_table('energy',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], name='energy_brand_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='energy_pkey')
    )
    op.create_index('ix_energy_name', 'energy', ['name'], unique=True)
    op.create_index('ix_energy_id', 'energy', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='roles_pkey'),
    sa.UniqueConstraint('name', name='roles_name_key')
    )
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.create_table('categories',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('categories_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='categories_pkey'),
    sa.UniqueConstraint('name', name='categories_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_categories_id', 'categories', ['id'], unique=False)
    op.create_table('ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('energy_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('criteria_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.NUMERIC(precision=3, scale=1), autoincrement=False, nullable=False),
    sa.Column('review', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['criteria_id'], ['criteria.id'], name='ratings_criteria_id_fkey'),
    sa.ForeignKeyConstraint(['energy_id'], ['energetics.id'], name='ratings_energy_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='ratings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ratings_pkey')
    )
    op.create_index('ix_ratings_id', 'ratings', ['id'], unique=False)
    op.create_table('brand',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='brand_pkey')
    )
    op.create_index('ix_brand_name', 'brand', ['name'], unique=True)
    op.create_index('ix_brand_id', 'brand', ['id'], unique=False)
    op.create_table('energetics',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('brand_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ingredients', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['brand_id'], ['brands.id'], name='energetics_brand_id_fkey'),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], name='energetics_category_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='energetics_pkey')
    )
    op.create_index('ix_energetics_id', 'energetics', ['id'], unique=False)
    op.create_table('brands',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='brands_pkey'),
    sa.UniqueConstraint('name', name='brands_name_key')
    )
    op.create_index('ix_brands_id', 'brands', ['id'], unique=False)
    # ### end Alembic commands ###
