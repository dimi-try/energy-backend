
# Дока Alembic

**Alembic** — это инструмент для управления миграциями баз данных в проектах на Python, использующих SQLAlchemy. Основная цель Alembic — облегчить управление изменениями в структуре базы данных, особенно когда проект развивается и требует обновлений схемы базы данных.

## Основные функции и преимущества :
**Управление миграциями**:
 Alembic позволяет создавать и применять миграции базы данных. Миграции — это скрипты, которые описывают изменения в структуре базы данных (например, добавление или удаление таблиц, изменение столбцов и т. д.).
 
**Автоматическая генерация миграций**:
Alembic может автоматически генерировать миграции на основе изменений в моделях SQLAlchemy. Это упрощает процесс создания миграций, так как не нужно писать SQL-код вручную.

**Управление версионированием базы данных**:
Alembic хранит информацию о версиях миграций, что позволяет откатывать изменения и применять их последовательно. Это полезно, если нужно вернуться к предыдущему состоянию базы данных.

**Совместная работа в команде**:
Alembic помогает поддерживать согласованность структуры базы данных среди различных разработчиков и окружений. Каждый разработчик может применять одинаковые миграции, что обеспечивает синхронизацию базы данных.

**Интеграция с SQLAlchemy**:
Alembic тесно интегрирован с SQLAlchemy, что упрощает работу с моделями данных и базой данных в целом. Это позволяет использовать те же модели и классы, что и в приложении, для миграций.

## Основные команды

1. Инициализация *(нам ее делать не надо если че, он уже есть в проекте)*
	```
	alembic init alembic
	```
	Создает структуру каталогов и конфигурационный файл `alembic.ini`.
	
2. Создание миграции:
	```sh
	alembic revision --autogenerate -m "message"
	```
	Создает новый файл миграции на основе изменений в моделях SQLAlchemy. Параметр `-m "message"` указывает описание миграции. Эту команду выполняем в случае, если у нас были какие-либо измененя в базе данных, например была создана/удалена таблица, или изменены связи.

3. Применение миграций:
	```sh
	alembic upgrade head
	```
	Применяет все миграции до последней версии (или `head`).
	
4. Откат миграций:
	```sh
	alembic downgrade -1
	```
	Откатывает последнюю миграцию (или на указанное количество шагов назад). Используем если чет нахуевертили в базе данных.

4. Просмотр состояния миграций:
	```sh
	alembic current
	```
	Показывает текущую версию миграции, примененную к базе данных.

## Как это работает
**Модели и миграции**: Создавая или изменяя модели SQLAlchemy, Alembic использует информацию о моделях для создания миграционных скриптов.

**Миграционные скрипты**: Alembic генерирует Python-скрипты, которые описывают, как изменить базу данных (например, создать таблицы, изменить столбцы и т. д.).

**Применение изменений**: Применяем эти миграции к базе данных, обновляя её структуру в соответствии с моделями.

Alembic делает процесс управления изменениями в структуре базы данных более систематизированным и менее подверженным ошибкам, что особенно важно при разработке сложных приложений.