# Импортируем BaseModel из Pydantic для создания схем
from pydantic import BaseModel, Field
# Импортируем Optional и List для аннотации
from typing import Optional, List

# =============== КРИТЕРИИ ===============
# Определяем раздел для моделей, связанных с критериями оценок

# Базовая модель для критериев, содержит общие поля
class CriteriaBase(BaseModel):
    # Поле name: название критерия, обязательное, с максимальной длиной 100 символов
    name: str = Field(..., max_length=100)

# Модель для создания критерия, наследуется от CriteriaBase
class CriteriaCreate(CriteriaBase):
    # Наследуем все поля из CriteriaBase без изменений, используется для POST-запросов
    pass

# Полная модель критерия, используется для возврата данных о критерии
class Criteria(CriteriaBase):
    # Поле id: уникальный идентификатор критерия
    id: int
    # Внутренний класс Config для настройки модели
    class Config:
        # Указываем, что модель может быть создана из атрибутов ORM-объектов SQLAlchemy
        from_attributes = True

"""
Сноска для Criteria:
Эта модель используется в эндпоинте GET /criteria/, который возвращает список всех критериев.
Эндпоинт доступен всем пользователям, так как критерии — это публичная информация.
"""